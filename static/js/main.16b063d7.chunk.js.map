{"version":3,"sources":["redux/actions.js","redux/states.js","TodoInput.js","Todotem.js","TodoList.js","App.js","reportWebVitals.js","redux/indexx.js","redux/reducer.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","todos","TodoInput","id","dispatch","useDispatch","useState","name","setName","className","Input","value","onChange","e","target","type","placeholder","length","Button","onClick","todo","uuid","charAt","toUpperCase","substring","createdOn","Date","toString","payload","forwardRef","ref","toLocaleString","time","checked","setChecked","edit","setEdit","updateTodo","todoId","TodoList","useSelector","state","list","map","Todotem","App","dats","setDats","quotes","setQuotes","useEffect","a","fetch","res","json","response","index","Math","floor","random","console","log","text","author","inde","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","newTodo","action","push","filter","i","store","createStore","serialisedState","localStorage","getItem","JSON","parse","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16b063d7.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\n\r\nexport function addTodo(todo) {\r\n    return {\r\n        type: ADD_TODO,\r\n        payload: todo\r\n    }\r\n}\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\n\r\nexport function deleteTodo(todoId) {\r\n    return {\r\n        type: DELETE_TODO,\r\n        payload: todoId\r\n    }\r\n}\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\nexport function updateTodo(todo) {\r\n    return {\r\n        type: UPDATE_TODO,\r\n        payload: todo\r\n    }\r\n}\r\n\r\n","export let todos = [\r\n\r\n]","import React, { useState, } from 'react'\r\nimport { Input, Button } from '@material-ui/core';\r\nimport \"./TodoInput.css\"\r\nimport { addTodo } from './redux/actions';\r\nimport {v1 as uuid} from \"uuid\"\r\nimport { useDispatch } from 'react-redux';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\n\r\nfunction TodoInput({id}) {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState(\"\")\r\n   \r\n    return (\r\n        <div className=\"todoinput\">\r\n              \r\n         <Input value={name} onChange={(e) => setName(e.target.value)}type=\"text\" placeholder=\"Type something\"/> \r\n           \r\n        \r\n         \r\n        {name.length > 0 ? \r\n         <Button className=\"todoinput__addbutton\" onClick={() => {\r\n            dispatch(addTodo({\r\n                \r\n                id: uuid(),\r\n                name: name.charAt(0).toUpperCase() + name.substring(1, name.length),\r\n                createdOn: new Date().toString()\r\n               \r\n           }) \r\n           )\r\n              setName(\"\")\r\n        }}>Add Todo</Button> : <p className=\"todo__required\">Todo Is Required <ErrorIcon/></p>}\r\n       \r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoInput\r\n\r\n\r\n\r\n","import React, { useState, forwardRef} from 'react'\r\nimport {Button, Input} from '@material-ui/core'\r\nimport \"./TodoItem.css\"\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteTodo, updateTodo } from './redux/actions'\r\n\r\nexport default forwardRef (function Todoitem({todo}, ref) {\r\n   \r\n    const [time, setTime] = useState(new Date().toLocaleString())\r\n    const [checked, setChecked] = useState(false)\r\n    const [edit, setEdit] = useState(false)\r\n    const [ name, setName] = useState(todo.name)\r\n   \r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div ref={ref} className=\"todoitem\">\r\n     \r\n            <div className=\"todoitem__title\">\r\n            \r\n        {edit ? <Input type=\"text\" value={name} onChange={(e) => setName(e.target.value)}/>: <li className=\"todo__list\">{todo.name}</li>}   \r\n                \r\n          {name ?  <p className=\"todoitem__update\">Posted at {time}</p> : <p className=\"todoitem__update\">posted at {time}</p>}     \r\n          \r\n            </div>\r\n                 <input type=\"checkbox\" onClick= {() => setChecked(!checked)} className=\"input\"/>\r\n           \r\n         {\r\n             checked ? \r\n             <div>\r\n             <Button className=\"edit\" onClick={() => { dispatch(updateTodo({\r\n                 ...todo,\r\n                 name : name,\r\n                createdOn: new Date().toString()\r\n                }))\r\n                if(edit) {\r\n                    setName(todo.name)\r\n                    \r\n                }\r\n                setEdit(!edit)}}>\r\n                    {edit ? \"Update\" : \"Edit\"}\r\n                   \r\n                    </Button>\r\n                \r\n\r\n            <Button className=\"delete\" onClick={() => dispatch(deleteTodo(todo.id))}>Delete</Button>\r\n            </div> : \r\n                        <p className=\"todo__name\">{todo.name}</p>\r\n            }\r\n           \r\n              \r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n","import React, { } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport Todotem from './Todotem';\r\nimport \"./TodoList.css\"\r\nimport FlipMove from 'react-flip-move';\r\nfunction TodoList() {\r\n    const todos = useSelector(state=> state.list )\r\n  \r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"todos\">\r\n    \r\n            {todos.length > 0 ? \r\n               ( <FlipMove>\r\n                {todos.map((todo) => (\r\n                    <Todotem key={todo.id} todo={todo}/>\r\n                ))}\r\n                    </FlipMove>)\r\n\r\n             : ( <h1>.</h1>)\r\n                \r\n                }           \r\n\r\n    \r\n                  </div>\r\n           \r\n      \r\n          \r\n\r\n        \r\n\r\n           \r\n   \r\n          \r\n            \r\n      \r\n  \r\n       \r\n                   \r\n                   \r\n                   \r\n                   \r\n                  \r\n                \r\n             \r\n                \r\n           \r\n       \r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import { Button } from '@material-ui/core'\nimport {reducer} from \"./redux/reducer\"\nimport React, { useEffect, useState, useReducer } from 'react'\nimport \"./App.css\"\nimport TodoInput from './TodoInput'\n//import axios from \"./axios\"\nimport TodoList from './TodoList'\n//import { useSelector } from 'react-redux';\n//import axios from \"axios\"\n//import Quotes from './Quotes'\n//import FlipMove from 'react-flip-move';\n\nfunction App() {\n \n  \n  const [dats, setDats] = useState(\"\")\n  const [quotes, setQuotes] = useState([])\n \n  useEffect(() => {\n    (async  () => {\n      try{\n        const res = await fetch(\"https://type.fit/api/quotes \")\n        const response = await res.json();\n        const index = Math.floor(Math.random() * response.length)\n        setQuotes(response)\n        setDats(response[index])\n        console.log(response)\n      }\n      catch(error){\n        console.log(error)\n      }\n    })()\n\n    \n   \n  }, [])\n  const Changgeapi = (dats) => {\n    const inde = Math.floor(Math.random() * 1000) \n    setDats(quotes[inde]) \n    console.log(dats)\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"app__quotes\">\n        {dats ? \n        <div className=\"span\">\n      <span>\"{dats.text}\"</span>\n      <span>Author: {dats.author}</span>\n      </div>: <h1>Loading....</h1>\n        }\n       <div className=\"app__changequotes\">\n           <Button onClick={Changgeapi} className=\"app__changequotesbutton\">\n             More Inspirational Quotes\n           </Button>\n       </div>\n      </div>\n     \n    \n      <TodoInput />\n    \n  \n    \n\n          <TodoList/> \n    \n  \n      \n     \n    \n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {reducer} from \"./reducer\"\r\nimport { combineReducers } from \"redux\";\r\n\r\n// The key of this object will be the name of the store\r\nconst rootReducers = combineReducers({ list: reducer });\r\n\r\nexport default rootReducers;","\r\nimport { ADD_TODO, DELETE_TODO, UPDATE_TODO, } from \"./actions\"\r\nimport {todos} from \"./states\"\r\n\r\nexport const reducer = (state = todos, action) => {\r\n  \r\n  let newTodo;\r\n  switch(action.type){\r\n   \r\n    case ADD_TODO:\r\n      \r\n       newTodo = [...state];\r\n       newTodo.push(action.payload)\r\n      \r\n       return newTodo \r\ncase DELETE_TODO:\r\n          newTodo = [...state];\r\n          newTodo = newTodo.filter(todo => todo.id !== action.payload)\r\n       \r\n          return newTodo;\r\n          case UPDATE_TODO:\r\n              newTodo = [...state]\r\n           let index = -1\r\n          for(let i=0; i < newTodo.length; i++){\r\n              index++\r\n            if (newTodo[i].id === action.payload.id ){\r\n\r\n                break\r\n            }\r\n          }\r\n              \r\n               if(index !== -1){\r\n                   console.log(index)\r\n                   newTodo[index]= action.payload;\r\n                   return newTodo\r\n               }\r\n             break; \r\n         default: return state;\r\n          }\r\n}","import { createStore } from \"redux\";\r\nimport rootReducers from \"./indexx\";\r\n\r\n// convert object to string and store in localStorage\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serialisedState = JSON.stringify(state);\r\n    localStorage.setItem(\"persistantState\", serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\n// load string from localStarage and convert into an Object\r\n// invalid output must be undefined\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serialisedState = localStorage.getItem(\"persistantState\");\r\n    if (serialisedState === null) return undefined;\r\n    return JSON.parse(serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// create our store from our rootReducers and use loadFromLocalStorage\r\n// to overwrite any values that we already have saved\r\nconst store = createStore(rootReducers, loadFromLocalStorage());\r\n\r\n// listen for store changes and use saveToLocalStorage to\r\n// save them to localStorage\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n  <Provider store={store}>\n      <App />\n\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}